/*****************************************************************************************************
* Project Name      : SiGEPAPP
* APPP_INS_PATTERNS : 
* Author            : WeeDo 
* History           : 06/05/2009 - Matheus Goncalves - Versão Inicial
******************************************************************************************************/
DECLARE
   vCD_OBJETO number;
   vRESULTADO NUMBER;
   MENSAGEM VARCHAR2(2000); 
BEGIN   
   
 
APPP_CREATE_PATTERN(vCD_OBJETO,'Lembrando Escolhas',1,'Poupe o usuário do trabalho de refazer todas essas coisas, e faça por eles. Computadores são bons nisso. As pessoas não.',11111111111,'O usuário gosta de digitar textos que já foram digitados, ou repetir escolhas feitas anteriormente. Em particular, eles provavelmente retornar mais tarde e têm que entrar novamente com todas as sequencias de escolhas e configurações.','Existem várias técnicas que você pode utilizar para isso. Desde a mais simples até a mais complexa, por exemplo: Utilize o último valor de um controle como o valor padrão. Isso funciona para todos os tipos de controles - campos de textos, menus em cascata, botões, listas, etc. Se você está utilizando um text field, transforme-o em um combo box (que é uma combinação de um text field com um dropdown). Cada vez que o usuário entrar um valor unico no campo, este valor se transforma em um novo ítem do dropdown menu. Se você realmente quer fazer algo ainda melhor, use os itens do dropdown para completar automaticamente a medida que o usuário vai digitando! Permita que o usuário salve uma grande quantidade de configurações. O usuário nomeia o grupo de configurações e salva-os com este nome, mais tarde, ele poderá carregar estas configurações puxando pelo nome que ele mesmo deu.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;



APPP_CREATE_PATTERN(vCD_OBJETO,'Tabela Classificável',1,'Dar ao usuario a abilidade de mudar a ordem de classificacao da tabela tem efeitos poderosos. Primeiramente isto facilita a navegacao . Um usuario pode aprender mais a respeito do dado de uma maneira que ele nunca seria capaz de aprender de outra forma - Quantos deste tipo? Que proporcoes disto para aquilo? Ha apenas um daquilo? O que estah em primeiro ou ultimo? Etc. Subitamente se torna mais facil de encontrar itens especificos tambem; um usuario precisa apenas lembrar de um atributo do item em questao ( por exemplo, a data de sua ultima atualizacao ). Alem disso, se a ordem de classificacao eh retida desde de a invocacao de um software para outro, esta eh uma maneira para o usuario de personalisar o UI. Alguns podem querer a tabela classificada do primeiro ao ultimo; outros por variavies que ninguem mais ache interessante. Eh bom dar ao usuario este tipo de controle. Finalmente, o cabecalho de idioma selecinavel eh familiar para muitos usuarios agora.  ',11111111111,'O UI mostra informações multivariáveis as quais o usuário possa querer explorar, reordenar, personalizar, buscar por um item isolado ou simplesmente entender a base destas diferentes variáveis.','Escolher as colunas ( exemplo: as variáveis ) cuidadosamente. Pelo o que o usuario gostaria de classificar ou procurar? Conversadamente, o que não é nececessário ser mostrado nessa tabela - O que pode ser oculto até que o usuário peça por mais detalhes sobre um item específico? Os cabeçalhos das tabelas devem ter alguma habilitação visual na qual se pode clicar. Muitos tem cantos sinalizados na forma de botão. Setas indicativas superior ou inferior devem ser usadas para mostrar se a classificação está em ordem ascendente ou descendente ( e a presença de setas mostra qual coluna foi classificada por último - um efeito colateral muito fortuno! ). Considerar o uso de efeito Rollover nos cabeçalhos para reforçar a impressão de botão selecionável. Tentar usar um algorítimo de classificação estável. O que significa que se o usuário classifica primeiro por nome, e depois por data, a lista resultante mostrará grupos ordenados de items de mesma data que são classificados por nomedentro do grupo. Em outras palavras, a ordem de classificação atual será retida na próxima classificação, para a possível extensão. Sutil, mas muito útil. Se sua tecnologia UI permitir, as colunas poderão ser reordenadas ao arrastar e soltar. O Java Swing tem esta função. ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Tabela Árvore',1,'Combinando as duas maneiras de visualisação de dados em uma lhe proporciona o melhor dos dois mundos, ao custo de um pouco de complexidade visual e programável. Você também pode mostrar a hierarquia dos itens, mais a matriz de dados adicionais ou atributos de itens, numa estrutura unificada.',11111111111,'O UI mostra informações multivariáveis, então a tabela trabalha bem ao mostrar dados ( ou permitir que os mesmos seja classificados, como na Tabela Classificável ). Mas os itens são primeiramente organizados como uma hierarquia, então você também quer uma árvore, ou estrutura, para mostrá-los.','Os exemplos mostram o que voce deve fazer: colocar a árvore ( realmente uma estrutura ) na primeira coluna, e os atributos do item na coluna subsequente. As colunas - um item por coluna - são geralmente selecionáveis. Naturalmente, isto pode ser combinado com Tabela Classificável para criar uma estrutura mais navegável e interativa. Esta tecnica parece ter encontrado um lar em clientes de email e leitores de jornais, onde as linhas de discussão formam estruturas do tipo árvore.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Alternando Cores de Linhas',1,'Blocos de cores suaves definem e separam a informação que eles contém, mesmo quando você não pode usar muito espaço branco entre eles. Cartográficos e elaboradores de gráficos sabem disso há eras ( Lembrando que fundos coloridos são também efetivos para definir Seções com Título ). Alternar as cores de linhas ajudam um usuário especificamente: a seguir linhas da esquerda para a direita, e devolta, sem confundir as as mesmas. E ver as footprint da tabela em si, assim como separar de suas páginas.',11111111111,'As linhas de tabelas são difíceis de separar visualmente, especialmente quando há muitas colunas ou múltiplas linhas para uma coluna.','Escolher um par de cores suaves, de baixa saturação, que sejam similares mas não identicas ( em outras palavras, uma precisa ser levemente mais escura que a outra ). Boas escolhas são azul e branco, bege e branco, ou duas sombras similares de cinza - presumindo que o texto no topo delas já seja escuro de qualquer maneira. Geralmente uma das cores é a cor de fundo de sua página. Alternar a cor de linha a linha. Se a linha for estreita, você também pode experimentar grupos de linhas: as primeiras três são brancas e as próximas três são azul, etc. Este padrão praticamente elimina a necessidade de linhas horizontais entre as linhas com dados ( embora você possa usar tal técnica caso as linhas sejam muito finas ). Se suas colunas estiverem alinhadas umas com as outras, não necessitará de linhas verticais também, nem uma borda mais larga em volta da tabela - as cores de linha definirão os limites da tabela para você.  ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Listas em cascata',1,'Ao espalhar a hierarquia por diversas listas roladas, você mostra mais dela de uma só vez. É simples. A visibilidade é boa quando se lida com estruturas de informações complexas. Também, ao colocar os itens em listas se organiza traquilamente - um usuário pode mais facilmente manter o rastro de qual nível eles estão lidando do quem com um formato de estrutura, desde que o nível de hierarquia esteja em listas de posição fixa.',11111111111,'O usuário precisa navegar numa hierarquia que não seja muito profunda, mas que possa ter muitos itens em cada nível. Uma estrutura ou tree control funcionaria, mas o usuário usaria a barra de rolagem para cima e para baixo com muita frequencia para ver todos os itens, e não teriam uma boa visão de itens nos níveis mais alto da hierarquia. A hierarquia pode ser uma literal, como um sistema de arquivo, ou uma conceitual - este padrão é bastante usado para possibilitar a um usuário que navegue e escolha itens dentro de categorias, ou faça uma série de escolhas independentes, como com as fontes acima.','Colocar o primeiro nivel de hierarquia na lista da extrema esquerda ( a qual deve usar uma semantica de selecao unica ). Quando um usuario seleciona um item deve-se exibir os filhos deste item na proxima lista a direita. Faça o mesmo com os itens filhos - os itens folhas, como o oposto a ramos - voce pode querer exibir os detalhes do ultimo item selecionado na extrema direita. No exemplo Mac Finder abaixo, uma representaçao de um arquivo de imagem eh exibido; voce pode oferecer, ao inves disto, um UI para editar um item, ou para ler o seu conteudo, ou para qualquer coisa que seja apropriado para sua aplicaçao particular. Uma boa coisa a respeito deste padrao eh que voce pode facilmente associar botoes com cada lista: excluir o item atual, mover para cima, mover para baixo, etc. Muitos kits de ferramentas lhe deixarao fazer isso em controle de arvores, via manipulaçao direta, mas para aqueles que nao deixam esta eh uma alternativa viavel.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Pular para o Item',1,'As pessoas nao sao boas para fazer buscas em longas listas de palavras ou numeros. Mas os computadores sao. Deixe com que eles façam o que sao bons em fazer! Outra coisa boa nesta tecnica eh que permite ao usuario manter as maos no teclado. Enquanto um usuario move atraves de um formulario ou dialogo, ele pode gostar de selecionar uma lista atraves de simplesmente digitar os primeiros caracteres do item que ele quer - o sistema entao escolhe o item por ele, que pode continuar na proxima coisa. Nenhuma rolagem ou clique eh necessario; as maos do usuario nao precisa sair do teclado para o mouse.',11111111111,'A interface usa uma lista rolavel, tabela, dropdown, combo box ou arvore para apresentar um longo conjunto de itens. Estes itens sao classificados alfabeticamente ou numeralmente. O usuario quer encontrar ou selecionar um item em particular. Isto eh bastante usado em finders de arquivos, longas listas de nomes e caixas de seleçao para escolher estado ou pais. Pode tambem ser usado para numeros - anos, quantidade de dinheiro, etc. - ou mesmo em calendario.','Quando o usuário digita a primeira letra ou número do item que está procurando, pula para o primeiro item que combina com o que o usuário digitou - automaticamente rola a lista de maneira que o item fica visível, e o seleciona. Enquanto o usuário digita mais caracteres numa sucessão rápida, a seleção continua mudando para a primeira combinação exata para a linha digitada. Se não houver combinação, a seleção continuará na combinação mais próxima e não rola de volta ao topo da lista. Você pode querer sinalizar ao usuário para alertá-lo de que não há combinação - algumas aplicações o fazem, outras não. Martin van Welie, em sua coleção de padrões, definiu um padrão um padrão muito similar a este entitu lado Continuous Filter.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Desfazer de Multi-Nível',1,'A habilidade de desfazer uma longa sequencia de operações faz com que o usuário sinta que a interface é segura para navegar. Enquanto ele aprende a interface, ele pode testá-la, confiante de que ele não está fazendo mudanças que não possam ser desfeitas - mesmo se fizer algo ruim por acidente ( e isto é real para usuários de todos os níveis de qualificação, e não somente para iniciantes ). Alan Cooper devota a melhor parte de um capítulo a este conceito em seu livro clássico About Face. Uma vez que o usuário conhece a interface bem , ele pode utilizá-la com a confiança de que os error não são permanentes. Se o seu dedo escorregar e atingir o item de menu errado, nenhuma recuperação complicada e estressante será necessária; o usuário não tem que reverter a arquivos salvos ou desligar e iniciar tudo do zero, ou mesmo pedir para o administrador do sistema restaurar para um arquivo backup. Isto poupa do usuário o estress e tempo desperdiçado. Desfazer de Multi-Nível também permite usuários avançados a explorar caminhos de trabalho rapida e facilmente. Por exemplo, um usuário de Photoshop pode realizar uma série de operações de filtro numa imagem, estudar o resultado para ver se gosta, e então desfazer para o ponto inicial. Então ele pode tentar outra série de filtros, talvez salvá-la, e desfazer novamente. Isto pode ser feito sem o desfazer de Multi-Nível, mas levaria mais tempo ( para fechar e reabrir a imagem ) - Quando o usuário está usando a criatividade a velocidade e fácil manuseio é muito importante para manter a experiência.',11111111111,'Você está criando um UI altamente interativo que é mais complexo que uma simples navegação ou preenchimento de formulário  - leitores de cartas, software de banco de dados, ferramentas de autoria, software de gráficos, etc.','1. Primeiro, decidir quais operações precisam ter a opção de desfazer. Qualquer ação que possa mudar um arquivo ou coisa similar - qualquer coisa que possa ser permanente - deveria ter esta opção, enquanto que estados transientes ou de visibilidade geralmente não precisam. Para ser mais específico, nestes tipos de mudanças se espera ter a opção de desfazer na maioria das aplicações: entrada de textos para documentos ou planilhas - transações de banco de dados - modificações de imagens e pinturas de tela - mudanças de layout - posição, tamanho, ordem de empilhamento, agrupamento, etc - em aplicações de gráficos - operações de arquivo - criação, exclusão, ou remanejamento de objetos como mensagens de email ou colunas de planilhas - qualquer operação de recortar, copiar e colar.  Os seguintes tipos de mudança geralmente não podem ser desfeitas. Mesmo que você pense que esteja correndo a segunda milha ao dar-lhes esta opção de desfazer, considere a possibilidade de irritar completamente o usuário ao acrescentar a esta opção mudanças inúteis: seleção de texto ou objeto - navegação entre janelas e páginas - localização do cursor do mouse e texto - posição da barra de rolagem - posição e tamanho de janelas ou páginas - mudanças feitas em dialogos simples ou sem importancia. Algumas operações estão na fronteira. Preenchimento de formulário, por exemplo, tem algumas vezes a a opção de desfazer. Mas se ao sair da seleção de um campo de mudança automaticamente infligir na mudança, provavelme se torna uma boa idéia acrescentar a opção desfazer ( alguns tipos de operações são impossíveis de desfazer. Mas normalmente a natureza daquela aplicação torna óbvia esta afirmação para usuários com um mínimo de experiência, como o passo de pagamento de uma transação ecommerce, postar uma mensagem num bulletin board ou sala de bate-papo, ou enviar email - tanto quanto queremos algumas vezes que seja impossível desfazer ). Em qualquer caso, tenha certeza de que a opção desfazer faça sentido ao usuário. Tenha certeza de definir e nomeá-las em termos  de como o usuário pensa da operação, não como o computador pensa. 2 - Segundo, crie uma pilha desfazer. Cada operação vai para o topo da pilha enquanto é realizada; cada Desfazer reverte a operação do topo, e então a próxima, e assim vai. Refazer trabalha no modo contrário de modo similar na pilha. A pilha deve ter pelo menos 10 a 12 itens para ser útil, e mesmo maior se você conseguir gerenciar. Observações a longo prazo e teste de usabilidade podem dizer quais são os limites para você ( Constantine e Lockwood asseguram que mais de uma dúzia de itens é geralmente desnecessária, já que usuários são raramente capazes de fazer uso efetivo de mais níveis. Usuários experientes de softwares poderosos podem lhe dizer diferente. Como sempre, conheça seus usuários ). 3 - Terceiro, decidir como apresentar a pilha de desfazer para o usuário. A maioria das aplicações de Desktop colocam o item Desfazer/Refazer no menu editar. Desfazer está geralmente conectado a Ctrl+Z ou seus equivalentes. As aplicações mais estáveis usam itens de Smart Menu para dizer ao usuário exatamente qual operação é a próxima na pilha de desfazer. Mas veja a captura de tela acima para uma apresentação diferente e mais visual. O photoshop mostra uma lista rolável de operações que podem ser desfeitas - incluindo aquelas que já foram desfeitas ( em cinza ). Isto permite ao usuário escolher o ponto na pilha onde ele queira ir. Um histórico de comando visual como este pode ser muito útil, mesmo como simplesmente lembrar o que você fez recentemente.  ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Itens de Smart Menu',1,'Itens de menu que sempre dizem o que farão  tornam o UI auto explicativo. O usuário não tem que pensar sobre qual objeto será afetado - e é menos provável que faça algo por acidente, como remover o Capítulo 8 ao invés da Nota 3.',11111111111,'O seu UI tem menu de itens que opera em objetos específicos, como Fechar, ou que comporta levemente diferente dependendo do contexto, como Desfazer.','Toda vez que o usuário muda o objeto selecionado ( ou documento atual, ou última operação desfazer, etc ), muda os itens de menu que operam nele para incluir ações específicas. Obviamente, se não houver objeto selecionado, você vai querer desabilitar o item de menu, assim reenforçando a conexão entre o item e seu objeto. Acidentalmente, isto também pode funcionar como etiquetas de botões, ou links, ou qualquer coisa que seja um verbo no contexto do UI. E se houver multiplos objetos selecionados ? Não há um conjunto completo de guia lá fora - este padrão é comumente visto com documentos e operações desfazer - mas você poderia escrever no plural, como Remover objetos selecionados.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Efeitos Rollover',1,'Qualquer um que tenha utilizado a Web agora sabe que se alguma coisa muda quando se rola o cursor do mouse em cima, é clicável. O efeito do ponteiro faz com que apareça. Outra vantagem do rollover é que o usuário não precisa pensar se o cursor está ou não sobre algum objeto. Ele faz o gesto, e quando vê que o cursor do mouse mudou, de canto de olho, ele pode clicar em cima. Assim libera um pouco mais a atenção e visão do usuário.',11111111111,'Você colocou coisas clicáveis no seu UI, mas não deixá-las parecendo grandes botões. Efeitos visuais estáticos como bordas chanfradas não são o que você quer - talvez porque eles ocupem muito espaço, ou porque não funcionam com o design, ou porque a caça de itens clicáveis seja parte da diversão para o usuário.','Há várias maneiras de se fazer isto. Naturalmente, elas podem ser combinadas ( e frequentemente são ). Usar vários efeitos é vantajoso. 
    *  Mudança da cor do objeto, seja o texto ou o fundo. A maioria dos Websites fazem isto; os links HTML o fazem automaticamente. O Internet Explorer no Windows faz botões rolled-over tornarem de um tom acizentado para colorido.
    * Alguma coisa próxima muda. talvez o título ou uma descrição abreviada do item é mostrado num local designado; talvez uma imagem mude.
    * O cursor do mouse muda. O kit de ferramentas do UI provê vários built-in de formatos de cursor para situações específicas - I-Beams para entrada de texto, mãos para arrastar ou clicar, etc. Use isto onde puder. Eles são padronizados e esperados. 
    * Mudança do tamanho do objeto, ou animação. Evite exageros, seus usuários agradecerão.
Um alerta: Não dependa demais nos efetos de Rollover. As coisas clicáveis devem carregar algum efeito visual para convenção familiar, exemplo: texto de links no canto inferior esquerdo da página. Um usuário não deveria estar a caça de links que não são reconhecidos sem mover o ponteiro do mouse por cada canto da página! Se estiver em dúvida, teste com usuários reais.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Indicador de progresso',1,'O usuário fica impaciente quando o UI fica travado. Mesmo se você trocar o ponteiro do mouse por um relógio ou hourglass ( o que você deve fazer em todo caso ), você não quer fazer o usuário esperar por um tempo indeterminado. Tem sido mostrado através de experiências que se o usuário ver um indicador de algo em progresso, ele se torna muito mais paciente, mesmo se tiver que esperar mais tempo. Talvez seja por causa dele saber que o sistema está pensando, e não está simplesmente travado ou esperando uma ação dele.',11111111111,'Uma operação que consome tempo interrompe o UI por mais de dois segundos ou algo assim.','O usuário fica impaciente quando o UI fica travado. Mesmo se você trocar o ponteiro do mouse por um relógio ou hourglass ( o que você deve fazer em todo caso ), você não quer fazer o usuário esperar por um tempo indeterminado. Tem sido mostrado através de experiências que se o usuário ver um indicador de algo em progresso, ele se torna muito mais paciente, mesmo se tiver que esperar mais tempo. Talvez seja por causa dele saber que o sistema está pensando, e não está simplesmente travado ou esperando uma ação dele.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Histórico de Comando',1,'Algumas vezes um usuário precisa lembrar o que fez no decorrer do trabalho com o UI. Os computadores são bons em manter registros como este; as pessoas não são. Por exemplo, o usuário pode querer repetir uma sequencia de operações em diferentes objetos.

Além do mais - e isto é tão importante quanto, mas por diferentes razões - algumas vezes um usuário vai querer  reverter aquelas ações. A capacidade de reversão dá ao usuário a liberdade de usar e explorar. Ele sabe que, seja lá o que fizer, ele pode voltar para um estado conhecido, e não tem que se preocupar com ações de danos permanentes. Uma sequencia registrada de ações permite a ele desfazer quantos níveis ele desejar.',11111111111,'O usuário realiza uma sequencia de ações no UI. Isto parace ser encontrado geralmente em editores de gráficos e ambientes de programação.','O software no qual o seu UI foi desenvolvido inicialmente pricisa ter um modelo forte do que uma ação venha a ser - do que é chamada, com qual objeto foi associado, como revertê-lo, etc. Então você pode criar uma interface sobre isto.

Desfazer de Multi-Nível ( exemplo, ser capaz de desfazer multiplas operações ) deve ser a primeira coisa que você implementa, por ser provavelmente a primeira coisa que um usuário procurará se suspeitar que o UI tem um registro de ações tomadas. Então, se você considera que isto vale a complexidade da interface, mostre a lista de ações em algum lugar do UI. Nomeie-os bem, e deixe o usuário usar esta lista para voltar alguns numeros arbitrários de passos.

O botão voltar de um Web Browser propicia uma função muito similar ao histórico de comandos.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Seleção Smart',1,'A precisão não é o ponto forte de todas as pessoas. Uma vez que se torna claro para o programa que você está tentando selecionar um grupo particular, o programa precisa te ajudar e fazer a seleção por você. Alguns usuários acharão muito mais rápido e mais conveniente se um certo gesto fizesse uma seleção de grupo ( outros usuários acharão isto possível! ).',11111111111,'O usuário está trabalhando com um objeto selecionável de qualquer tipo - texto, pixels, objetos geométricos, e até mesmo itens de árvore ou células de tabelas. As coisas selecionáveis são organizadas em grupos visuais coerentes, como palavras ou frases num editor de texto, ou áreas coloridas numa imagem. Normalmente, seleções de um desses grupos pode requerer que o usuário  clique e arraste o cursor com alguma precisão.','Definir um certo gesto do UI para fazer a seleção smart, onde o cursor está atualmente. O gesto pode ser:

    * um duplo clique or digitação,
    * um clique simples enquanto numa ferramenta ou modo em particular, como a varinha mágica do Photoshop,
    * um clique simples enquanto segura uma tecla apertada,
    * meramente o ato de alargar a seleção para com as fronteiras de um grupo, como alguns editores de texto fazem ( mas veja o aviso abaixo ). 

Se houver grupos maiores contendo grupos pequenos, considere modos para prover a seleção smart aos grupos internos também - como expandir a seleção de uma palavra para a seleção de uma frase, e então um parágrafo inteiro.

Mas tenha cuidado. Quando feito sem pensar as seleções smart podem ser incrivelmente irritantes. Imagine a irritação do usuário quando ele tenta selecionar precisamente um pedaço de texto ou pixel, mas toda vez que se aproxima de uma palavra ou linha colorida, a seleção corre para o que ele não queria! Isto acontece em alguns editores de texto, inclusive Word.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Edit-in-Place',1,'Se alguém quiser editar algo, faz sentido tentar editar isto onde está localizado. Fazer o usuário ir a outro lugar - longe do local, ou desconectado do texto original numa outra janela - não é geralmente funcional; pode ser difícil encontrar ( embora nem sempre seja ), e leva mais tempo do que só clicar no texto e digitar no lugar.',11111111111,'O UI contem contem etiquetas de texto que o usuário pode querer mudar algumas vezes - os nomes de objetos, por exemplo. Eles podem estar num editor gráfico, ou uma tabela, ou uma árvore, ou em qualquer lugar.','Quando o usuário clica, ou, mais tipicamente, dá um clique duplo no texto a ser editado, simplesmente troca por um campo de texto contendo a linha ( que deve ser imediatamente selecionado ). Se um cursor de entrada de texto aparecer no lugar correto, e/ou o texto for automaticamente selecionado, pode ser uma dica suficiente para o usuário para iniciar a edição; nenhuma borda se faz necessária no campo do texto. Mantenha na mesma localização física, e retenha a fonte de display - resumindo, faça com que seja o mais amigável possível.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Modo One-off',1,'Os usuários acharão incômodo trocar para um modo, fazer algo pequeno, e então sair totalmente deste modo novamente - isto normalmente envolve cliques em pequenos hit targets em janelas longe da tela sendo trabalhada ( Obs.: modo é definido como um estado de aplicação que muda temporariamente o comportamento do cursor do mouse ). É sabido que clicar demais numa interface é irritante! No lugar disso, a interface deve fazer o que torna o trabalho do usuário mais fácil, mesmo se não for conceitualmente claro ou fácil de programar: quando o usuário entra no modo em questão, fica no mesmo por apenas uma operação, então automaticamente sai do modo.',11111111111,'Você está criando um editor gráfico, e há certas operações - tais como criação de objetos - que os usuários não repetem ou interagem normalmente. Geralmente, o usuário realizará a operação uma vez, então imediatamente quer fazer outra coisa, como manipular o objeto acabado de ser criado.','A parte mais difícil é decidir quais operações precisam ter este comportamento. A criação de objetos tipicamente precisam; o uso do zoom, laço, pinturas, etc, tipicamente não precisam. Descubra quais editores gráficos seus usuários tendem a usar mais, e veja o que eles fazem.  

Um exemplo pode deixar tudo isto mais claro. Considere uma ferramenta de desenho na qual o clique do mouse na tela normalmente seleciona objetos abaixo do cursor do mouse:

    * O usuário clica no botão criar retângulo na palheta. O UI vai para um modo especial de criação, indicado por um cursor retangular - agora o clicar na tela transmite a colocação de objeto, e não uma seleção. 
    * O usuário clica uma vez na tela para colocar o canto superior esquerdo.
    * O usuário clica uma vez na tela para colocar o canto inferior direito.
    * O UI, após contar dois cliques e criar o retangulo, sai do modo criar retangulo e volta ao modo padrão, no qual o clique significa selecionar.
    * O usuário agora está livre para selecionar objetos, move-los, mudar o tamanho, etc., sem ter que voltar para a palheta para alterar o modo. ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Redimensionamento forçado',1,'Bem simples, isto pode poupar um grande trabalho ao usuário. Se o UI compele o redimensionamento a funcionar de certas formas - como forçar a largura e altura a permanecer nas mesmas proporções - então o usuário pode focar no que ele quer criar pela aparência, e não se preocupar com o aspecto de proporções. Se o usuário não tem este nível de controle sobre a interface, ele pode precisar reclassificar para redimensionar  através da digitação de números num formulário. Isto quase nunca é tão simples de fazer quanto via manipulação direta, já que isto quebra a fluidez do trabalho do usuário.',11111111111,'Você está criando um editor gráfico que permite o usuário redimensionar objetos interativamente. Mas algumas vezes um usuário pode querer preservar o aspecto do proporcional do objeto por exemplo - especialmente em casos de imagens ou textos formatados - ou a posição de seu centro geográfico. O drag-the-corner de redimensionamento interativo normal deixa isto difícil e falho.','Isto é basicamente um modo de redimensionamento modificado, para que possa se comportar de forma similar ao seu redimensionamento normal - por arrastar o canto ou limite de um objeto para redimensioná-lo. Considere o uso de uma tecla modificadora para diferenciar do redimensionamento normal, exemplo, o usuário segura a tecla Shift apertada enquanto arrasta. Ou se você achar que a maioria dos usuários sempre vai querer assim, torne-o como a operação de redimensionamento padrão. o Word faz isto com imagens.

Enquanto o usuário arrasta o cursor do mouse, uma caixa de redimensionamento deve ser desenhada para mostrar as novas dimensões. Seja qual for o tipo de força que estiver impondo, mostre-a via caixa.

Há várias razões para alguém forçar o redimensionamento:

    * Deixar o centro geométrico do objeto no mesmo lugar, e redimensionar simetricamente ao redor.
    * Redimensionar por unidades mais largas que pixels. Por exemplo, um criador de GUI pode requerer que a altura da caixa de lista seja alguns números integrais de linhas de texto ( provavelmente não uma boa idéia no geral, mas se for com o que você precisa trabalhar, o UI deve refletir isto ). Ou você pode estar trabalhando com um snap-to-grid. Em qualquer caso, a caixa de  redimensionamento deve pular de um tamanho para o próximo.
    * Um objeto pode ter um limite de tamanho. Uma vez que o usuário tenha atingido o limite de tamanho numa dimensão ou outra, não deixa a caixa de redimensionamento expandir ( ou contrair, como pode ser o caso ) além daquela dimensão. 

Alan Cooper describes this in his book About Face, although the technique is older than that. He generalizes the concept and calls it constrained drag. ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Seleção Composta',1,'Obviamente uma destas interpretações tem que ganhar; o usuário precisa ser capaz de predizer o que vai acontecer quando ele clica o mouse no composto. Dois tipos diferentes de seleção - um para o composto, e o outro para o objeto folha que não é composto - resolve o problema. Os dois modos de seleção são similares, mas respondem diferentemente aos eventos de mouse como clicar e arrastar.',11111111111,'Você está criando um editor gráfico que contem objetos compostos - coisas que podem ser movidas e também manipuladas, mas que contem outros objetos. Isto é especialmente comum em criadores de GUI. Você quer que o usuário seja capaz de amarrar os objetos filhos e criar novos dentro do composto, mas isto significa clicar no fundo do composto. Isto deve selecionar o composto ou não? O clique do mouse tem duas interpretações, refletindo o duplo papel - pai e filho - que o composto está atuando. O que fazer? ','O Visual C++ parece ter a solução mais elegantepara este problema. As suas caixas de grupos ( as quais, de fato, não são compostos, mas não relevante para a questão ) não podem ser selecionadas a menos que o usuário clique próximo ao limite do objeto. Os cliques de mouse dentro do objeto opera nos componentes, seja ao iniciar um laço ou selecionar um objeto. Arrastar o composto é também feito através dos cantos; redimensionamento só pode ser feito via eight selection handles. isto coloca limites na manipulação direta, mas é um mecanismo simples, e facilmente entendido uma vez que você sabe o que está acontecendo. ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Fundo distante',1,'Os fundos que possuem um foco suave, cores graduais, e outras dicas, parece ficar atrás de conteúdos mais definidos. O conteúdo, assim, parecec flutuar na frente. Um efeito de figura/chão forte é conseguido através do pseudo-3D look - isto atrai o olho do visualizador. Deixando as explicações frescas de lado, apenas tem um bom visual. ',11111111111,'O layout de sua página tem elementos visuais fortes ( blocos de textos, controle de grupos, janelas, etc ) e não é muito densa ou ocupada. Você quer que a página pareça atrativa e distinta; você pode ter uma estratégia visual em mente. Você gostaria de usar algo mais interessante do que branco ou cinza para o fundo de sua página.','    * Foco suave. Mantenha as linhas suaves e tenha certeza de não ter pequenos detalhes demais.

    * Cores graduais. Cores saturadas e brilhantes tudo bem, mas novamente, linhas fortes entre elas não pode. Permita que as cores se misturem umas as outras. De fato, se você não tiver uma imagem para usar no fundo, você pode criar uma simples cor gradual na sua ferramenta de desenho predileta.

     * Detalhes suaves e cores graduais distantes são duas funções que dizem ao nosso sistema visual a respeito de distancia.

    * Sem pontos focais fortes. o fundo não deve competir como conteúdo pela atenção do usuário. 

Conforme você cria um UI com um fundo distante, considere o que acontece quando o usuário muda o tamanho da página. Como o fundo acomoda um tamanho maior ( ou menor )',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Overview Plus Detail',1,'Trata-se de uma velha maneira de lidar com complexidades: apresentar uma boa visão do que de fato está acontecendo, e permitir ao usuário apronfundar-se nos detalhes conforme sua necessidade, mantendo os níveis de visões disponíveis para rápida interação. O Overview Plus Detail divide o contexto em pequenos pedaços compreensíveis ao usuário, revelando o relacionamento entre eles. Edward Tufte usa o termo leitura micro e macro para descrever um conceito similar, só que para mapas, diagramas e/ou informacões gráficas estáticas. O usuário tem uma larga estrutura na sua frente a todo momento, enquanto possuem a capacidade de apronfundar-se nos detalhes de acordo com sua própria vontade: A área de visualização é condensada e personalizada. Da mesma forma, os usuários do Overview Plus Detail podem manusear o conteúdo linearmente, pular partes, comparar, mover-se de um para outro ponto rapidamente, mover lentamente, ou até mesmo reorganizar a maneira como a informação é exibida. Finalmente, esse tipo de exibição pode servir como um marco do tipo Você está aqui. Um usuário pode, rapidamente, saber onde ele se encontra, mesmo em meio a um conteúdo grande de informação. ',11111111111,'Você precisa apresentar um volume grande conteúdo, tais como mensagem em uma caixa de e-mail, seções de um site na internet, partes de um vídeo, etc. Isso normalmente tornase uma tarefa grande, complexa ou demasiadamente dinâmica para ser exibida em um simples formulário linear. Você quer que o usuário veja toda a estrutura do conteúdo, bem como tenha a capacidade de manuseá-lo de sua própria maneira.','O painel denominado Overview Panel serve como um índice selecionável ou um mapa. Coloque-o em um lado da página. Quando o usuário seleciona um elemento do painel, detalhes sobre este elemento, tais como texto, imagens, informações adicionais, controles, etc. - aparecem do outro lado do painel. (Normalmente o Overview Panel localiza-se no topo ou à esquerda da tela). Mas o que é exatamente o Overview Panel? Depende - sim, depende da natureza do conteúdo ou talvez do tipo de tarefa à ser realizada. Por exemplo, a maioria dos sistemas que possibilitam visualizar arquivos exibem uma grande área com pequenos quadrados que podem ser selecionados. Um GUI builder pode usar o próprio layout do canvas. Objetos selecionados exibem então suas propriedades como detalhes adicionais. De qualquer forma, o importante é manter as duas partes na mesma tela / janela. Você pode também colocar os detalhes dentro de uma janela separada, mas não é tão eficiente. Você quer que o usuário seja capaz de navegar facil e naturalmente através do UI, sem ter que ficar esperando ou movendo telas aqui e alí. Em particular, você não quer que o usuário fique indo e voltando entre duas janelas (embora isso seja normalmente necessário quando se trata de pequenos displays como PDAs).  A maioria das interfaces que utilizam o Overview Plus Detail apresentam a informação normalmente através de objetivos selecionáveis organizados de forma linear ou hierárquicos. Os usuários normalmente sabem o que fazer com listas e árvores de dados. Mas você deve utilizar qualquer modelo organizacional que seja apropriado, como um modelo geográfico (como em um mapa), ou uma matrix 2D, ou até mesmo algo mais abstrato como um gráfico.  Padrões de apresentação de informação, tais como Sortable Table e Tree-Table podem ser utilizados neste contexto, bem como componentes básicos como listas, árvores e abas de seleção.  Além disso, se você amarrar a informação em mais do que dois níveis de visão/detalhe, você acabará com algo parecido com uma Lista em Cascata.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Hub and Spoke',1,'A princípio, você está utilizando a navegação para estruturar a experiência do usuário em algo diferente dos convencionais formulários da web baseados em hipertextos. Você está, na verdade, solicitando ao usuário que foque em uma seção de cada vez, e então retorne para a tela principal e só então vá para uma outra seção. Isso certamente reduz a confusão entre as páginas - uma vez que o usuário tem menos conteúdo para ser visto, e menos para se preocupar. Além disso, ao restringir os caminhos de navegação através de páginas interativas, você poderá também prevenir erros - os usuários não conseguirão colocar-se em problemas tão facilmente. Sem tantos botões e caminhões para navegação, eles não podem deixar uma formulário da Web preenchido pela metade pulando para uma outra página (o velho problema do abandono na edição de informações). Por meio de uma modal window, eles não conseguirão fazer qualquer outra coisa além do diálogo apresentado na janela, em geral, os usuários têm menos oportunidades de tornar o UI confuso e bagunçado. Além disso, a navegação restrita significa que você tem controler mais rígidos sobre quais circunstancias o UI deve lidar - isso frequentemente resulta em uma implementação mais simples (e barata). A arquitetura também é beneficiada. A medida que mais funcionalidades aparece, é fácil para você adicionar mais links à tela/página principal.  Uma grande vantagem dessa abordagem é que o usuário achavrá claro o que deve ser feito, a estrutura Hub and Spoke é intuitivamente óbvia em muitos contextos. Você clica em um link, faz o que tem que fazer, e então, quando tiver terminado, retorna para a página principal.',11111111111,'Você está desenvolvendo um UI que contém diversas tarefas ou elementos distintos uns dos outros: formulários, demos, jogos, artigos, transações, aplicações completas, etc. Todas podem ser acessadas através de uma página ou janela principal. Mas você não quer que se faça um link entre todas as seções ou spokes, e isso por diversas possíveis razões: 1. problemas com espaço, 2. Desordem 3. Workflow restrito para forçar a completude (ou cancelamento explícito) de uma tarefa.','Na página principal, arrume os links. Em cada link (e cada link para ter várias páginas, como se fosse um wizard), remova todos os outros links de navegação que possam distrair o usuário do fluxo principal das telas/informação. Deixe apenas ações que forem realmente pertinentes - Botões de Next ou Back, Cancel, Done, etc. - além disso, talvez aqueles também que não irão interferir no workflow, tais como telas de ajuda e links de emails. Quando o usuário encontrar o que estiver procurando, providencie uma maneira do usuário poder dizer que ele terminou sua tarefa, algo como um botão do tipo Done ou Cancel, ambos devem levar o usuário de volta à tela principal. Uma boa descrição de uma maneira específica de utilização da arquitetura Hub and Spoke pode ser encontrada em um artigo do Bob Baxley sobre Views e Forms entitulado Principles of Taks Flow for Web Applications, Parte 1. Seu primeiro ponto principal parte do pressuposto de que as informações visíveis e baseadas em HTML devem estar separadas de formulários editáveis, mas seu segundo ponto é que a abordagem do Hub and Spoke pode prevenir erros e abandono de edições por parte do usuário. O artigo foi utilizado como base para a construção deste Pattern.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Extras On Demand',1,'Um UI simples é algo realmente excelente, especialmente para usuários leigos, ou usuários que não precisam de todas as funcionalidades que você pode oferecer. Deixe o usuário escolher quando ele quer ver o UI inteiro com todas as suas opções - Os usuários são muito melhores nisso do que você. Se seu design torna 80% das funcionalidades mais fáceis, e os restantes 20% são ao menos razoáveis (com apenas um pouco de trabalho por parte do usuário), seu UI é tão bom quanto se esperava. Quando feito corretamente, pode ainda economizar espaço.',11111111111,'Existe muita coisa na página, e algumas coisas não são realmente importantes. Você precisa ter uma UI mais simples, porém precisa colocar todo este conteúdo em algum lugar.','Via de regra, os UI devem tender para o que é mais comumente utilizado, ou seja, os itens mais importantes. Coloque um lembrete em sua própria página ou seção. Por padrão, esconda esta seção. No novo UI simplificado, coloque um botão claramente identificado ou faça nele um link para o lembrete, por exemplo Opções Adicionais. Muitos UIs utilizam flechas ou símbolos do tipo >>, como parte do link ou lable do botão. Alguns outros utilizam ..., especialmente se o botão dispara um novo diálogo. Esta seção deve ter um outro botão de forma a permitir que o usuário feche-o novamente. Lembre-se, a maioria dos usuários não necessitará dele muitas vezes. Certifique-se também de que a entrada e a saída para estes itens adicionais estão obvias, teste-as. Em algumas caixas de diálogos, a caixa literalmente expande para acomodar os detalhes da seção, então é minizado novamente quando o usuário assim o deseja. Um outro mecanismo pode ser encontrado em vários desktops: um menu do tipo dropdown para preenchimento de cores, por exemplo, algo do tipo Ver cores adicionais..., que ao ser selecionado traz uma outra caixa de diálogo com a informação requerida.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'One-Window Drilldown',1,'Não complique. Coloque tudo na tela ou janela, as opções de cada estágio devem ser simples, e os usuário sabem que não precisarão atentar para nada mais. Além disso, todo mundo hoje em dia sabe como se usa um Web browser, com sua conhecida janela e botões de voltar e prosseguir.  Normalmente as pessoas esperam que ao clicar em um botão ou em um link a página que se encontram no momento seja substituída , e quando clicam no botão Voltar, eles irão ser levados de volta à página que estavam anteriormente.  Diversas telas podem ser utilizadas para exibir onde o usuário encontra-se durante sua navegação - um clique em uma janela principal pode trazer uma segunda janela, um outro clique traz uma terceira janeira e assim por diante. Porém, isso pode tornar-se confuso para o usuário. Até mesmo os usuários mais experientes podem se perder e não saber exatamente onde encontra-se uma determinada janela que foi aberta (embora ele possa ver diversas janelas abertas lado a lado, e movê-las conforme seu desejo). O Pattern One-Window Drilldown é uma alternativa diante de todos os outros Patterns existentes para este tipo de problema. Conforme dito anteriormente, o Pattern Overview Plus Detail pode não funcionar, ou tornar o layout da tela e suas interações muito complexa para o usuário leigo. Tiled Windows, closable panels, movable pieces, e listas em cascata também possuem problemas envolvendo espaço e complexidade.',11111111111,'Todo o conteudo de sua aplicação é formado por muitas páginas ou painés através dos quais os usuários podem navegar. Eles podem ser organizados de maneira linear, ou numa rede do tipo hipermídia, ou - mais comumente - de forma hierárquica. Listas de endereços, calendários, lista de emails, e outros softwares familiares normalmente seguem este tipo de organização.  Um desses, ou até mesmo os dois, problemas deve ser aplicável à você: Você está construindo algo com sérios restrições de espaço, tal como um celular, ou uma televisão, Palm, etc. Nessas telas em miniatura, o Pattern Overview Plus Detal não é bom, porque não há espaço suficiente para implantá-lo. Mesmo que você esteja esteja desenvolvendo algo para uma tela do tipo desktop ou laptop, você pode ter limitações deste tipo. Seus usuários poderão ser leigos - eles podem ainda ser impacientes com o fato de ter vários jánelas abertas ao mesmo tempo, por exemplo. Ou talvez eles não tenha habilidade ao lidar com telas complexas ou dispositivos pouco conhecidos. Assim como os usuários dos tradicionais quiosques são pegos com essas dificuldades, os usuários PCs também o são.','Foi-lhe dado uma janela para trabalhar uma tela em miniatura, ou uma tela normal, ou uma janela do tipo browser, ou até mesmo a janela de uma aplicação que reside em um desktop em conjunto com outras aplicações. Estruture seu conteúdo em painéis que caibam perfeitamente na janela. Nem tão grande, nem tão pequena. Nestes painéis, faça algumas portas de interpretação óbvia, como links grifados, botões, ou linhas de tabelas que possam ser clicadas. Quando o usuário clicar em um destes objetos, substitua o painel atual com o novo. Assim, o usuário vai se aprofundando no conteúdo da aplicação. Como o usuário retorna? Se você está desenvolvendo para algum dispositivo que contenha botões do tipo Próximo ou Anterior, essa já é uma boa solução. (Se não, crie estes botões e coloque-os em um lugar permanente na janela - normalmente no canto esquerdo superior da janela, exatamente onde os browsers os colocam!) Você pode também colocar controles de Finalizar ou Cancelar nos painéis, onde o usuário estará fazendo algum tipo de tarefa ou seleção; Isso dá ao usuário um sentimento de finalização, de tarefa concluída. Lembre-se que sem uma visualização gráfica da estrutura do sistema, o usuário é forçado a criar uma imagem em sua própria cabeça de como os espaços e divisões se encaixam entre si. Estruturas simples do tipo linear ou hierárquica são bem melhores.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Intriguing Branches',1,'Pessoas são naturalmente curiosas. Se elas vêem algo que  que parece interessante, e elas têm tempo e iniciativa para verificar, certamente elas o farão. O ato de surfar na internet nunca se tornará um hobby obsoleto sem esta curiosidade natural e disposição para clicar em links através do desconhecido. O costume de criar Intriguing Branches na web já tornou-se algo largamente praticado na Web. Contudo, um jeito ainda mais interessante de utilização parece estar sendo desenvolvido.  É do conhecimento de todos que os usuários tendem a ignorar coisas entitualdos como Help, por exemplo. Mas que tal se você colocar o conteúdo de ajuda atrás de links (ou botões, ícones) entitulados de alguma outra maneira, como More...?. Você pode explorar então a curiosidade natural do usuário para conduzí-los a um lugar onde eles poderão aprender o que realmente precisam. A utilização habilidosa no uso de Intriguing Branches pode fazer sua interface muito mais divertida - é sempre algo muito bom de se fazer.',11111111111,'O usuário estará se movendo em um caminho linear, tal como um texto narrativo ou uma tarefa bem definida, uma sequencia de slides, um filme em flahses, etc. Mas você quer apresentar conteúdo adicional que não é o foco principal das atenções. Pode ser uma informação paralela como no exemplo acima. Pode ser também um texto de suporte - exemplos: Explicação de conteúdos, definições de termos, etc. Ou, pode ser até mesmo uma funcionalidade oculta, como um Easter egg. De qualquer forma, você quer uma forma agradável de apresentar o conteúdo de forma que possa ser ignorado por usuários que estejam com pressa, mas ao mesmo tempo disponível para usuários com quem o conteúdo possa ser apropriado.','Partindo do pressuposto de que você conhece a fundo seus usuários, crie portas em meio ao conteúdo principal que irá aparecer para eles. Estas portas poderá ser em formato de hyperlinks (até mesmo em aplicações desktop), cabeçalhos, botões, itens de menu, ícones, ou imagens que possam ser clicadas - Fica totalmente ao seu critério a maneira como irá nomeá-los de forma a instigar a curiosidade. Há arte envolvida! Quando estiver em dúvida, faça testes de usabilidade com alguns de seus usuários principais. Com uma leve pitada de curiosidade, você poderá adicionar dicas ou algum outro tipo de descrição curta para informar o usuário onde eles serão conduzidos após clicar no link.  Ademais, providencie uma maneira óbvia para que o usuário retorne ao seu ponto inicial de navegação. A idéia é levá-los a ler o conteúdo dos branches, e então conduzí-los de volta ao ponto de início, e não deixá-los perdidos. Janelas do tipo popup devem ter botões de Fechar, novas páginas que aparecem no browser devem conter uma área de Voltar em um link ou botão.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Multi-Level Help',1,'Os usuários de quase todos os softwares precisam de vários níveis de ajuda para a tarefa que estão tentando desenvolver. Alguém que esteja fazendo algo pela primeira vez necessitará de uma ajuda diferente daquele que utiliza o sistema frequentemente. Mas, mesmo entre aqueles que são novatos, por exemplo, existe diferentes níveis no que tange ao aprendizado e tipo de ensino - algumas pessoas, por exemplo, preferem ler um tutorial, outras não; algumas julgarão a ajuda do tipo tooltip bastante útil, enquanto outros acham irritante. Textos de ajuda descritos em diferentes níveis de uma vez - mesmo que não parecam com aqueles sistemas de ajuda tradicionais - terão a capacidade de auxiliar qualquer pessoa que necessite. Muitas técnicas de ajuda disponibiliza seus conteúdos em lugares de fácil acesso, mas não diretamente na cara do usuário o tempo todo, assim os usuários não ficarão irritados. Contudo, as técnicas precisam ser conhecidas pelos usuários, caso contrário seu trabalho será um desperdício.',11111111111,'Você está construindo algo complexo; alguns poucos usuários necessitarão de um serviço completo de ajuda, mas você sabe que a maioria dos usuários não terá tempo ara utilizá-lo. Você quer satisfazer ambos, tanto o impaciente quanto aquele que ocasionalmente utilizará a ajuda disponível.','Crie o sistema de ajuda em diversos níveis,. Pense no conteúdo como sendo algo contínuo: Cada um dos níveis requer mais esforço do usuário do que o nível anterior, coloque os títulos e instruções diretamente na página, incluindo padrões de ajuda como hints e prompts. Tenha cuidado para não exagerar com isso. Se for feito com cautela, normalmente os usuários não os notarão, porém, não utilize parágrafos inteiros de textos - poucos usuários efetivamente os lerão. Tootips: Utilize-os para exibir resumos, descrições em apenas uma linha de uma característica da interface que não seja facilmente compreendido pelo usuário.  Inclua um pequeno delay no dispositivo que exibe um hint ao passar o mouse sobre um ícone, esse delay vai diminuir a irritação de boa parte dos usuários. Vá exibindo descrições mais longas de forma dinâmica, conforme o usuário seleciona ou rola a página através de uma barra. Reserve uma área da página para isso, ao invés de utilizar uma parte minúscula ou mesmo uma telinha do tipo popup. Para Ajuda exibida em telas separadas, faça em HTML através de um browser, e algumas vezes em WinHelp ou MacHelp - estes são utilizados frequentemente para manuais online - livros inteiros - e são acessados através de menus em um Menu de Ajuda ou através de um botão do tipo Help disposto numa página HTML. Existem ainda as técnicas do tipo Live, são normalmente o tipo suporte por email, Web ou até mesmo telefone. Existem ainda as comunidades de suporte, quase sempre na Web. ',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Toplevel Navigation ',1,'Na internet, uma excelente barra de navegação torna-se importantísso a ser considerado, portanto, os usuários irão desejar isso. Ainda mais importante, contudo, é necessário um conjunto de links ou botões que refletem a estrutura de forma a torná-lo de fácil compreensão para o usuário. Isso proporciona uma visão geral da interface, e auxilia os usuários  a encontrar o que efetivamente necessitam. Também facilita a exploração e navegação, colocando cada divisão distante uma da outra por apenas um clique. Você pode ainda adicionar ao conjunto um painel de navegação que exibe ao usuário em qual divisão ele se encontra no momento.',11111111111,'Você está construindo um enorme web site, ou uma aplicação muito complexa com diversas divisões e ferramentas. Em ambos os casos, os usuários necessitarão mover-se de uma determinada divisão para outra.','A coisa mais importante é basear o trabalho em uma boa estrutura organizacional. Mantenha o número de divisões baixo de forma que você possa mostrá-las dentro do espaço disponível, e lembre-se de nomeá-las muito bem - não use muitas palavras, coloque nomes que sejam compreensíveis para os usuários, enfim, siga algum padrão que seja apropriado para o usuário (Sobre, Produtos, etc.). Assim como para o próprio painel de navegação, faça um painel simples que tenha a mesma funcionalidade - e que se localize no mesmo lugar - em cada página que apareça. Na Web, deve ser em todas as páginas. Um bom painel de navegação é um componente essencial de um bom framework visual. Para exibir aonde o usuário encontra-se no momento, simplesmente faça com que o link para a divisão corrente seja exibido de maneira diferente das outras. Use uma cor um pouco mais contrastante, talvez, ou alguma figura indivativa como uma flecha. Um ponto importante que você provavelmente terá que lidar , especialmente na Web, é como exibir esse tipo de painel de navegação em conjunto com outros tipos de links e objetos. Eles precisam ser distintos uns dos outros. Você pode tambem utilizar duas abordagens bem diferentes  - textos que podem ser clicados no topo da página, e abas para acessar mais informações locais, por exemplo. Esteja ciente que paginas de internet e janelas principais podem precisar de layouts diferentes de outras páginas na UI. Se acessar à seções diferenciadas da interface é um dos propósitos da página ou janela, então o Top Level Navegation precisará ser um pouco mais proeminente do que os outros objetos, você poderá ainda adicionar links e detalhes adicionais. Finalmente, você deve aceitar o fato de que nem todos os usuários irão efetivamente utilizá-los, ou até mesmo notar um sistema de auxílio à navegação como este. É um conceito errôneo entre os engenheiros e designers acharem que os usuários têm uma visão lógica de toda a estrutura primeiro para depois decidirem onde ir no site. Eles não agem assim. Na verdade, eles normalmente não se importam em como o site está organizado, eles simplesmente seguem aquilo que form mais simples e óbvio até que encontrarem o que necessitam.  É como um indivíduo que procura por uma sala de espera em um museu - eles provalmente não perderão tempo lendo um mapa se existem setas ou indicadores para os guiar.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Color-Coded Divisions',1,'Este é um bom exemplo de um signpost - algo que dá ao usuário uma idéia de onde ele está. Isto é feito através de algo muitas vezes sutil. Cores têm efeito visual ao invés de verbal, e não é algo que usuários irão necessariamente notar de imediato. Porém, uma vez que os usuários sintonizarem aos padrões de cores, eles poderão fazer uso disso. Mesmo antes disso, eles saberão quando deixaram uma determinada seção e iniciaram outra, se eles notaram que os padrões de cores mudaram. Portanto, padrões de cores serve para distinguir uma seção de outra. Este padrão torna os limites mais claros. É mais fácil para os usuários mentalmente mapear um determinado espaço de navegação, uma divisão e então o espaço como um todo. Você deve fazer isso com uma UI grande de qualquer forma, mesmo que não esteja utilizando padrões de cores. Maneiras criativas na utilização das cores pode também melhorar a aparência de seu UI e até mesmo menos cansativo para o usuário. Pode ainda contribuir para o branding de seu sistema - Veja o exemplo da Apple.',11111111111,'Você está construindo uma grande UI com muitas páginas e janelas, as quais poderão ser organizadas em divisões (capítulos, seções, sub-aplicações, etc.). Você poderá utilizar um FrameWork visual para consolidá-los visualmente. Mas ao mesmo tempo, você também quer que cada divisão tenha uma aparência distinta/própria.','Pegue uma das cores UI e vá modificando-a de divisão em divisão. Normalmente, a cor do background é mais forte. A maioria dos designs fica melhor com uma cor trim, como a borda, ou o background aplicado à uma quantidade menor de texto.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Card Stack
',1,'Este padrão estrutura o conteúdo dentro de algo muito mais fácil para o entendimento do usuário, fazendo com que tudo seja compreendido já na primeira vez . Esta prática torna a arquitetura da informação óbvia. O uso de Tabs (ou abas), especialmente, é muito conhecido pelos usuários. Além do mais, o uso de Card Staks economiza espaço.',11111111111,'Há muita coisa na página. Uma grande quantidade de controles ou textos estão espalhados através da UI, tudo sem o benefício de uma estrutura rígida (como uma Sheet de propriedades), a atenção do usuário fica totalmente comprometida em meio a tanta distração.','Primeiramente, escolha a arquitetura de informação correta - divida o conteúdo em partes coerentes, and dê a eles nomes curtos e de fácil memorização (uma ou duas palavras, se possível). Então escolha uma apresentação: As Tabs são ótimas, mas elas geralmente requerem 6 ou menos partes de divisão ou cards. Não duplique o conteúdo. Uma coluna à esquerda de nomes  fica bom em muitas páginas da Web e caixas de diálogos. Você pode inserir vários cards em apenas um destes. Isso permite que você os organize de maneira hierarquica também. (Em algum momento isso se torna mais como um Overview plus Detail, na verdade não existe uma clara distinção entre eles - tecnicamente falando). Alguns UIs tem ainda um menu em cascata no topo da página, eles ocupam menos espaço que um link feito em colunas, contudo peca no que tange a clareza na demonstração de toda a informação. Eles funcionam se o conteúdo é bem óbvio. Lembre-se que se você dividir o conteúdo de maneira errada, os usuários serão forçados a ficar indo e vindo entre os cards a medida que vão explorando as informações e/ou comparando-as. Seja legal com seus usuários teste a arquitetura da informação primeiro.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Forgiving Format 
',1,'O usuário quer somente terminar o que está fazendo, não quer se preocupar com escolhas complicadas ou coisas difíceis. Computadores são bons ao manusear diferentes maneiras de inserir informação (até um determinado ponto, é claro). É uma combinação perfeita, deixe o usuário digitar o que precisa, e, se for razoável, faça com que o sistema se preocupe em tratar o que foi digitado. Isso pode ajudar a simplificar as coisas de maneira tremenda. Pode até remover a necessidade de Hints, embora eles são normalmente utilizados em conjunto.',11111111111,'Seu UI pode aceitar inserção de vários tipos por parte dos usuários - significados diferentes, formatos diferentes, etc. - mas você não quer poluir sua página com um monte de campos de inserção (text fields) do tipo Digite isso, ou aquilo, ou isso, ou...','O pulo do gato (você sabia que haveria um...): Este padrão torna o problema de design em um problema de programação. Você tem que pensar sobre quais tipos de coisas o usuário normalmente digita - talvez você está pedindo um dado em formato de data ou hora, e a variação irá ser apenas no formato. Esse e um caso fácil. Ou talvez você está solicitando termos de pesquisa, e a variação será no que o software fará com a informação. Essa é mais difícil! Pode o software interpretar uma ambiguidade em um determinado caso? Como? Cada caso é único. Apenas certifique-se que a resposta do sistema aos mais variados parâmetros de inserção do usuário esteja de acordo com o que o usuário espera. Teste, teste e teste com usuários reais.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Input Hints 
',1,'Se a página é auto-explicativa, os usuários não têm que adivinha o que devem digitar - eles não têm nem que pensar nisso!',11111111111,'A página apresenta um text field (campo de inserção de texto), mas o tipo de dado que este campo requer não é conhecido pelos usuários em geral.','Escreva um exemplo curto ou uma sentenca explicativa, e coloque logo abaixo do campo de inserção. Dois exemplos unidos por um ou fica muito bom também. Mantenha o texto pequeno e discreto, embora legível. Considere a utilização de uma fonte que seja dois pontos menor do que a utilizada pelo campo de inserção. (Um ponto de diferença no tamanho da fonte irá parecer mais como um erro do que uma mudança intencional!). No desenvolvimento de páginas, van Dyne et. al. refere-se à esta técnica no seu Padrão Prevenindo Erros.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

APPP_CREATE_PATTERN(vCD_OBJETO,'Remembered Choices 
',1,'Poupe o usuário do trabalho de refazer todas essas coisas, e faça por eles. Computadores são bons nisso. As pessoas não.',11111111111,'O usuário gosta de digitar textos que já foram digitados, ou repetir escolhas feitas anteriormente. Em particular, eles provavelmente retornar mais tarde e têm que entrar novamente com todas as sequencias de escolhas e configurações.','Existem várias técnicas que você pode utilizar para isso. Desde a mais simples até a mais complexa, por exemplo: Utilize o último valor de um controle como o valor padrão. Isso funciona para todos os tipos de controles - campos de textos, menus em cascata, botões, listas, etc. Se você está utilizando um text field, transforme-o em um combo box (que é uma combinação de um text field com um dropdown). Cada vez que o usuário entrar um valor unico no campo, este valor se transforma em um novo ítem do dropdown menu. Se você realmente quer fazer algo ainda melhor, use os itens do dropdown para completar automaticamente a medida que o usuário vai digitando! Permita que o usuário salve uma grande quantidade de configurações. O usuário nomeia o grupo de configurações e salva-os com este nome, mais tarde, ele poderá carregar estas configurações puxando pelo nome que ele mesmo deu.',vRESULTADO);

if vRESULTADO <= 0 then
   SELECT 'INSERT REALIZADO COM SUCESSO' INTO MENSAGEM FROM DUAL;
ELSE
   SELECT 'ERRO AO REALIZAR O INSERT' INTO MENSAGEM FROM DUAL;   
end if;

end;

/
